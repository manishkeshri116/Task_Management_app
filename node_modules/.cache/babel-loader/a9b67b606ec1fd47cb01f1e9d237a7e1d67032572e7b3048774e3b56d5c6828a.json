{"ast":null,"code":"var _jsxFileName = \"E:\\\\Task_Management\\\\app_management\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { createTask, fetchTaskById, updateTask } from '../redux/actions/taskActions';\n// src/components/TaskForm.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskForm = ({\n  match,\n  history\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const taskId = match.params.id;\n  const [task, setTask] = useState({\n    title: '',\n    description: '',\n    status: 'Pending',\n    dueDate: ''\n  });\n  useEffect(() => {\n    if (taskId) {\n      // Fetch task by ID and set form fields\n      dispatch(fetchTaskById(taskId));\n    }\n  }, [dispatch, taskId]);\n  const handleChange = e => {\n    setTask({\n      ...task,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (taskId) {\n      dispatch(updateTask(taskId, task));\n    } else {\n      dispatch(createTask(task));\n    }\n    history.push('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"task-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: task.title,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: task.description,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"status\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        value: task.status,\n        onChange: handleChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"In Progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"dueDate\",\n        children: \"Due Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"dueDate\",\n        value: task.dueDate,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: taskId ? 'Update Task' : 'Create Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"De2gn7MZnR8ynaqb22tLl7WQAqg=\", false, function () {\n  return [useDispatch];\n});\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","createTask","fetchTaskById","updateTask","jsxDEV","_jsxDEV","TaskForm","match","history","_s","dispatch","taskId","params","id","task","setTask","title","description","status","dueDate","handleChange","e","target","name","value","handleSubmit","preventDefault","push","onSubmit","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","_c","$RefreshReg$"],"sources":["E:/Task_Management/app_management/src/components/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createTask,fetchTaskById, updateTask } from '../redux/actions/taskActions';\r\n// src/components/TaskForm.js\r\n\r\nconst TaskForm = ({ match, history }) => {\r\n  const dispatch = useDispatch();\r\n  const taskId = match.params.id;\r\n  const [task, setTask] = useState({\r\n    title: '',\r\n    description: '',\r\n    status: 'Pending',\r\n    dueDate: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (taskId) {\r\n      // Fetch task by ID and set form fields\r\n      dispatch(fetchTaskById(taskId));\r\n    }\r\n  }, [dispatch, taskId]);\r\n\r\n  const handleChange = (e) => {\r\n    setTask({ ...task, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (taskId) {\r\n      dispatch(updateTask(taskId, task));\r\n    } else {\r\n      dispatch(createTask(task));\r\n    }\r\n    history.push('/');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"task-form\">\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"title\">Title</label>\r\n        <input type=\"text\" name=\"title\" value={task.title} onChange={handleChange} required />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"description\">Description</label>\r\n        <textarea name=\"description\" value={task.description} onChange={handleChange} required />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"status\">Status</label>\r\n        <select name=\"status\" value={task.status} onChange={handleChange} required>\r\n          <option value=\"Pending\">Pending</option>\r\n          <option value=\"In Progress\">In Progress</option>\r\n          <option value=\"Completed\">Completed</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"dueDate\">Due Date</label>\r\n        <input type=\"date\" name=\"dueDate\" value={task.dueDate} onChange={handleChange} required />\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <input type=\"submit\" value={taskId ? 'Update Task' : 'Create Task'} />\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TaskForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}