{"ast":null,"code":"var _jsxFileName = \"E:\\\\Task_Management\\\\app_management\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from 'react';\nimport { TaskContext } from '../App';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useContext(TaskContext);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('/tasks');\n        dispatch({\n          type: 'FETCH_TASKS_SUCCESS',\n          payload: response.data\n        });\n      } catch (error) {\n        dispatch({\n          type: 'FETCH_TASKS_ERROR',\n          payload: error\n        });\n      }\n    };\n    fetchTasks();\n  }, [dispatch]);\n  if (state.loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 29\n  }, this);\n  if (state.error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", state.error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 27\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: state.tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/task/${task._id}`,\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"tMjQDhNvN1vDEz7QS76YEprP+qA=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useContext","useEffect","TaskContext","Link","axios","jsxDEV","_jsxDEV","TaskList","_s","state","dispatch","fetchTasks","response","get","type","payload","data","error","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","message","tasks","map","task","to","_id","title","_c","$RefreshReg$"],"sources":["E:/Task_Management/app_management/src/components/TaskList.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { TaskContext } from '../App';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst TaskList = () => {\r\n  const { state, dispatch } = useContext(TaskContext);\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await axios.get('/tasks');\r\n        dispatch({ type: 'FETCH_TASKS_SUCCESS', payload: response.data });\r\n      } catch (error) {\r\n        dispatch({ type: 'FETCH_TASKS_ERROR', payload: error });\r\n      }\r\n    };\r\n    fetchTasks();\r\n  }, [dispatch]);\r\n\r\n  if (state.loading) return <div>Loading...</div>;\r\n  if (state.error) return <div>Error: {state.error.message}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Task List</h1>\r\n      <ul>\r\n        {state.tasks.map(task => (\r\n          <li key={task._id}>\r\n            <Link to={`/task/${task._id}`}>{task.title}</Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,WAAW,QAAQ,QAAQ;AACpC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAGV,UAAU,CAACE,WAAW,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,QAAQ,CAAC;QAC1CH,QAAQ,CAAC;UAAEI,IAAI,EAAE,qBAAqB;UAAEC,OAAO,EAAEH,QAAQ,CAACI;QAAK,CAAC,CAAC;MACnE,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdP,QAAQ,CAAC;UAAEI,IAAI,EAAE,mBAAmB;UAAEC,OAAO,EAAEE;QAAM,CAAC,CAAC;MACzD;IACF,CAAC;IACDN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,IAAID,KAAK,CAACS,OAAO,EAAE,oBAAOZ,OAAA;IAAAa,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC/C,IAAId,KAAK,CAACQ,KAAK,EAAE,oBAAOX,OAAA;IAAAa,QAAA,GAAK,SAAO,EAACV,KAAK,CAACQ,KAAK,CAACO,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EAE/D,oBACEjB,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBjB,OAAA;MAAAa,QAAA,EACGV,KAAK,CAACgB,KAAK,CAACC,GAAG,CAACC,IAAI,iBACnBrB,OAAA;QAAAa,QAAA,eACEb,OAAA,CAACH,IAAI;UAACyB,EAAE,EAAE,SAASD,IAAI,CAACE,GAAG,EAAG;UAAAV,QAAA,EAAEQ,IAAI,CAACG;QAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC,GAD3CI,IAAI,CAACE,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACf,EAAA,CA9BID,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAgCd,eAAeA,QAAQ;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}