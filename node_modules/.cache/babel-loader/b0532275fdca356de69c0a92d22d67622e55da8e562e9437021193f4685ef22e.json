{"ast":null,"code":"var _jsxFileName = \"E:\\\\Task_Management\\\\app_management\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchTasks } from '../redux/actions/taskActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    tasks,\n    loading,\n    error\n  } = useSelector(state => state.tasks);\n  useEffect(() => {\n    dispatch(fetchTasks());\n  }, [dispatch]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"task-title\",\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"task-status\",\n        children: task.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"task-due-date\",\n        children: new Date(task.dueDate).toLocaleDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: `/tasks/${task._id}`,\n        className: \"button\",\n        children: \"View Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this)]\n    }, task._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"+lAsznxMgvQHhEEMwWM16tZe3no=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchTasks","jsxDEV","_jsxDEV","TaskList","_s","dispatch","tasks","loading","error","state","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","map","task","title","status","Date","dueDate","toLocaleDateString","href","_id","_c","$RefreshReg$"],"sources":["E:/Task_Management/app_management/src/components/TaskList.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchTasks } from '../redux/actions/taskActions';\r\n\r\nconst TaskList = () => {\r\n  const dispatch = useDispatch();\r\n  const { tasks, loading, error } = useSelector((state) => state.tasks);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchTasks());\r\n  }, [dispatch]);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  return (\r\n    <div className=\"task-list\">\r\n      {tasks.map((task) => (\r\n        <div className=\"task-item\" key={task._id}>\r\n          <h2 className=\"task-title\">{task.title}</h2>\r\n          <p className=\"task-status\">{task.status}</p>\r\n          <p className=\"task-due-date\">{new Date(task.dueDate).toLocaleDateString()}</p>\r\n          <a href={`/tasks/${task._id}`} className=\"button\">View Details</a>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEQ,KAAK;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACH,KAAK,CAAC;EAErET,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAACL,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,CAACK,QAAQ,CAAC,CAAC;EAEd,IAAIE,OAAO,EAAE,oBAAOL,OAAA;IAAAQ,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACrC,IAAIN,KAAK,EAAE,oBAAON,OAAA;IAAAQ,QAAA,GAAG,SAAO,EAACF,KAAK,CAACO,OAAO;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAE/C,oBACEZ,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAN,QAAA,EACvBJ,KAAK,CAACW,GAAG,CAAEC,IAAI,iBACdhB,OAAA;MAAKc,SAAS,EAAC,WAAW;MAAAN,QAAA,gBACxBR,OAAA;QAAIc,SAAS,EAAC,YAAY;QAAAN,QAAA,EAAEQ,IAAI,CAACC;MAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC5CZ,OAAA;QAAGc,SAAS,EAAC,aAAa;QAAAN,QAAA,EAAEQ,IAAI,CAACE;MAAM;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5CZ,OAAA;QAAGc,SAAS,EAAC,eAAe;QAAAN,QAAA,EAAE,IAAIW,IAAI,CAACH,IAAI,CAACI,OAAO,CAAC,CAACC,kBAAkB,CAAC;MAAC;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9EZ,OAAA;QAAGsB,IAAI,EAAE,UAAUN,IAAI,CAACO,GAAG,EAAG;QAACT,SAAS,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA,GAJpCI,IAAI,CAACO,GAAG;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKnC,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACV,EAAA,CAvBID,QAAQ;EAAA,QACKL,WAAW,EACMC,WAAW;AAAA;AAAA2B,EAAA,GAFzCvB,QAAQ;AAyBd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}